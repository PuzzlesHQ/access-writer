plugins {
    id 'java'
    id 'maven-publish'
    id("io.github.sgtsilvio.gradle.maven-central-publishing") version "0.4.0"
}

version = '1.0.1'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation "org.ow2.asm:asm:$asm_version"
    implementation "org.ow2.asm:asm-tree:$asm_version"
    implementation "org.ow2.asm:asm-util:$asm_version"
    implementation "org.ow2.asm:asm-analysis:$asm_version"
    implementation "org.ow2.asm:asm-commons:$asm_version"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'dev.puzzleshq'
            artifactId = 'access-writer'

            from components.java

            pom {
                name = "Access Writer"
                description = "A new snazzy version of access manipulation with improved support for wideners, transformers, & manipulators."
                url = "https://github.com/PuzzlesHQ/access-writer"

                licenses {
                    license {
                        name = "GNU Lesser General Public License"
                        url = "https://www.gnu.org/licenses/lgpl-2.1.html"
                        distribution = "LGPL"
                        comments = "This project includes LGPL-licensed components."
                    }
                }

                developers {
                    developer {
                        id = 'mrzombii'
                        name = 'Mr Zombii'
                        email = 'thezombiigames@gmail.com'
                    }
                }
                scm {
                    connection = "https://github.com/PuzzlesHQ/access-writer.git"
                    developerConnection = "https://github.com/PuzzlesHQ/access-writer.git"
                    url = "https://github.com/PuzzlesHQ/access-writer"
                }
            }
        }
    }
}

signing {
//    useGpgCmd()
    sign(publishing.publications[0])
}

wrapper {
    gradleVersion = "8.5"
    distributionType = Wrapper.DistributionType.ALL
}

java.toolchain.languageVersion.set(JavaLanguageVersion.of(17))
